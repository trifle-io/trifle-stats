# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      mongodb:
        image: mongo:6.0
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    strategy:
      matrix:
        ruby-version: ["3.1"]

    env:
      # Database configuration
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/test_db
      REDIS_URL: redis://redis:6379/0
      MONGODB_URL: mongodb://root:password@mongodb:27017/test_db?authSource=admin

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Wait for services to be ready
        run: |
          # Wait for PostgreSQL
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

          # Wait for Redis
          until timeout 1 bash -c "</dev/tcp/localhost/6379"; do
            echo "Waiting for Redis..."
            sleep 2
          done

          # Wait for MongoDB
          until timeout 1 bash -c "</dev/tcp/localhost/27017"; do
            echo "Waiting for MongoDB..."
            sleep 2
          done

      - name: Setup Database
        run: |
          # Create database if needed (adjust based on your setup)
          # bundle exec rails db:create db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@postgres:5432/test_db

      - name: Rspec
        run: bundle exec rspec
        env:
          DATABASE_URL: postgresql://postgres:postgres@postgres:5432/test_db
          REDIS_URL: redis://redis:6379/0
          MONGODB_URL: mongodb://root:password@mongodb:27017/test_db?authSource=admin

      - name: Rubocop
        run: bundle exec rubocop

      # - name: Performance
      #   run: cd spec/performance && bundle install && ruby run.rb 1000 '{"a":1,"b":2,"c":1,"d":2,"e":1,"f":2,"g":1,"h":2,"i":1,"j":2,"k":1,"l":2,"m":1,"n":2,"o":1,"p":2,"q":1,"r":2,"s":1,"t":2,"u":1,"v":2,"w":1}'
